import TelegramBot from "node-telegram-bot-api";
import fetch from "node-fetch";
import dotenv from "dotenv";
dotenv.config();

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  const messages = [
    {
      role: "system",
      content: `–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Booking Hub –≤ –°–æ—á–∏.

–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, —á—ë—Ç–∫–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –ø–æ —Å—É—â–µ—Å—Ç–≤—É.

‚ùå –ù–µ –ø–∏—à–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è, –æ–±—ä—è—Å–Ω–µ–Ω–∏—è, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º—ã—Å–ª–∏ –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–≥–∏ <think> –∏ –Ω–µ –æ–ø–∏—Å—ã–≤–∞–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–≤–µ—Ç–∞.
‚úÖ –î–∞–π —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ª–∏—Ü–∞ –∫–æ–º–∞–Ω–¥—ã Booking Hub.`,
    },
    { role: "user", content: text },
  ];

  try {
    // ‚å®Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
    await bot.sendChatAction(chatId, "typing");

    const res = await fetch("https://api.novita.ai/v3/openai/chat/completions", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${process.env.NOVITA_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        model: "deepseek/deepseek-r1-turbo",
        messages,
        temperature: 1,
        max_tokens: 1024,
        top_p: 1,
        frequency_penalty: 0,
        presence_penalty: 0,
        response_format: { type: "text" },
      }),
    });

    const data = await res.json();
    let reply = data?.choices?.[0]?.message?.content || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.";

    // üßπ –£–¥–∞–ª—è–µ–º —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è (—Ç–µ–≥–∏ <think>)
    reply = reply.replace(/<think>[\s\S]*?<\/think>/gi, "").trim();

    await bot.sendMessage(chatId, reply);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞:", err);
    await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.");
  }
});
